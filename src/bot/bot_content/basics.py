from pydantic import BaseModel
from typing import Optional
from src.bot.bot_content import skills
import random
from loguru import logger


class Commands:
    start = 'start'

    get_question_command = 'get_question'
    get_question_text = '‚ùìÔ∏è–ü–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å'

    get_answer_command = 'get_answer'
    get_answer_text = '‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç'

    change_skills_command = 'change_skill'
    change_skills_text = 'üí™ –í—ã–±—Ä–∞—Ç—å –Ω–∞–≤—ã–∫'

    profile_command = 'profile'
    profile_text = 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'

    change_mode_command = 'mode'
    change_mode_text = '‚öôÔ∏è –í—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º –∏–Ω—Ç–µ—Ä–≤—å—é'

    get_subscribe_command = 'get_ai_plus'
    get_subscribe_text = '‚ú® –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ AI+'

    another_question_text = 'üîÅ –î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å'

    cancel_command = 'cancel'
    cancel_text = 'üôÖ–û—Ç–º–µ–Ω–∞'


class Modes(BaseModel):
    all: str = 'all'
    specific: str = 'specific'
    worst: str = 'worst'


class Stickers(BaseModel):
    """–ú–æ–¥–µ–ª—å —Å—Ç–∏–∫–µ—Ä–æ–≤ –∏–∑ Telegram, –ø–æ–¥–µ–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: –≥—Ä—É—Å—Ç–Ω—ã–µ, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ, –≤–µ—Å–µ–ª—ã–µ"""
    sad: list = ['CAACAgIAAxkBAAENeRdngR-0D0fsvNtuvVMkyTUwnG8tdQACY0MAAl4qaUhBsrEwZuLtSjYE',
                 'CAACAgIAAxkBAAENeRlngR_9Nz7usxNa92imry4U00dYyAACoUYAAspVYUgfCcVI2EJH8jYE',
                 'CAACAgIAAxkBAAENeRtngSAdpJUdQa-CknA0jP2C5tCLiAACMEAAAkVDYUhJgUe8OF4vMDYE']
    neutral: list = ['CAACAgIAAxkBAAENeR1ngSAvFZgQxErYDLGoaFVNouO7MgAC5UUAAj3IYEiV-6uLXANTXTYE',
                     'CAACAgIAAxkBAAENeR9ngSB4zITgxUK7yjpmkBBL8V7brwAC0UQAAnf8YEitLhXjRxtXITYE',
                     'CAACAgIAAxkBAAENeSFngSCX3kuZ6QXsLYVytIToSgznWAACaUMAAzZoSJmYdv6yGx3jNgQ']
    happy: list = ['CAACAgIAAxkBAAENcc1neRshUdHxcJ35z_hCsZzRpy6zBwACtUMAAuWBYUjP53LZfBfr2TYE',
                   'CAACAgIAAxkBAAENeSVngSDBXkJLjkA5eJH26qKtYQMDuwACJD8AAlUDaEgBW9n4mcteezYE',
                   'CAACAgIAAxkBAAENeSdngSDNsUfvkoBsvuZJgHFTV5IG1gACyUYAAnZZYUi17hfzGM_6FjYE',
                   'CAACAgIAAxkBAAENeSlngSEBa8HGVwoSuTH58P8cYDTQqgACKkcAAmHaaEirAAENkFgUrmg2BA']

    @classmethod
    def get_sad_sticker(cls):
        logger.debug('–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ sad')
        return random.choice(cls().sad)

    @classmethod
    def get_neutral_sticker(cls):
        logger.debug('–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ neutral')
        return random.choice(cls().neutral)

    @classmethod
    def get_happy_sticker(cls):
        logger.debug('–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ happy')
        return random.choice(cls().happy)


class User(BaseModel):
    id: Optional[int] = None
    tg_id: int
    mode: Optional[str] = Modes().all
    skill: Optional[str] = skills.Basic().short_name


class SubscriptionStatus(BaseModel):
    active: str = 'active'
    inactive: str = 'inactive'

